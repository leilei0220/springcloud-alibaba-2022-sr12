plugins {
    id 'org.springframework.boot' version '2.3.12.RELEASE'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

group = 'com.leilei.gateway'
version = '1.0'
sourceCompatibility = '1.8'

repositories {
    maven{ url 'http://maven.aliyun.com/nexus/content/groups/public'}
    maven{ url 'http://maven.aliyun.com/nexus/content/repositories/jcenter'}
    maven{ url 'https://repo1.maven.org/maven2/'}
}

ext {
    set('springCloudVersion', "Hoxton.SR12")
    set('SpringCloudAlibabaVersion', "2.2.7.RELEASE")
}

dependencies {
    implementation 'org.springframework.cloud:spring-cloud-starter-gateway'
    // 解决网关已在nacos注册中心,却无法发现服务
    implementation 'org.springframework.cloud:spring-cloud-starter-loadbalancer'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-discovery'
    implementation 'com.github.ben-manes.caffeine:caffeine'
    implementation group: 'com.alibaba', name: 'fastjson', version: '1.2.75'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
//    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    compile group: 'com.baomidou', name: 'mybatis-plus-boot-starter', version: '3.5.1'
    compile('mysql:mysql-connector-java:5.1.47')
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'com.github.xiaoymin:knife4j-spring-boot-starter:2.0.9'



}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        mavenBom "com.alibaba.cloud:spring-cloud-alibaba-dependencies:${SpringCloudAlibabaVersion}"
    }
}

// 依赖排除 gateway不使用ribbon 使用loadbalancer
configurations {
    all*.exclude module: 'spring-cloud-starter-netflix-ribbon'
//    all*.exclude module: 'spring-boot-starter-logging'
//    all*.exclude module: 'logback-classic'
//    all*.exclude module: 'log4j-over-slf4j'
}

tasks.named('test') {
    useJUnitPlatform()
}
